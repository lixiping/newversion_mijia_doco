{"version":3,"sources":["../src/createSurface.js"],"names":["React","require","Component","PropTypes","invariant","fill","resolve","build","Shaders","Node","postShader","findGLNodeInGLComponentChildren","invariantStrictPositive","AnimatedData","runtime","_glSurfaceId","logResult","data","contentsVDOM","console","debug","module","exports","renderVcontainer","renderVcontent","renderVGL","getPixelRatio","getGLCanvas","glSurface","refs","canvas","GLSurface","props","context","_renderId","_id","_onSurfaceWillMount","_build","_attach","_onSurfaceWillUnmount","_dataAnimated","__detach","nextProps","id","renderId","width","height","pixelRatioProps","pixelRatio","children","preload","decorateOnShaderCompile","onShaderCompile","error","result","surfaceContext","glNode","t","childGLNode","via","resolved","_beforeSurfaceBuild","e","_afterSurfaceBuild","_resolved","_pixelRatio","oldDataAnimated","callback","setNativeProps","__getValue","forceUpdate","c","captureFrame","apply","arguments","imagesToPreload","style","backgroundColor","visibleContent","eventsThrough","restProps","process","env","NODE_ENV","withoutKeys","filter","key","length","warn","map","type","name","displayName","join","vdom","i","decorateVDOMContent","nbContentTextures","propTypes","any","isRequired","string","number","element","bool","autoRedraw","onLoad","func","onProgress","defaultProps"],"mappings":"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","file":"createSurface.js","sourcesContent":["const React = require(\"react\");\nconst { Component } = React;\nconst PropTypes = require('prop-types');\nconst invariant = require(\"invariant\");\nconst { fill, resolve, build } = require(\"./data\");\nconst Shaders = require(\"./Shaders\");\nconst Node = require(\"./Node\");\nconst postShader = require(\"./postShader\");\nconst findGLNodeInGLComponentChildren = require(\"./data/findGLNodeInGLComponentChildren\");\nconst invariantStrictPositive = require(\"./data/invariantStrictPositive\");\nconst AnimatedData = require(\"./AnimatedData\");\nconst runtime = require(\"./runtime\");\n\nlet _glSurfaceId = 1;\n\nfunction logResult(data, contentsVDOM) {\n  if (\n    typeof console !== \"undefined\" &&\n    console.debug // eslint-disable-line\n  ) {\n    console.debug(\"GL.Surface rendered with\", data, contentsVDOM); // eslint-disable-line no-console\n  }\n}\n\nmodule.exports = (\n  renderVcontainer,\n  renderVcontent,\n  renderVGL,\n  getPixelRatio,\n  getGLCanvas = glSurface => glSurface.refs.canvas\n) => {\n  class GLSurface extends Component {\n    constructor(props, context) {\n      super(props, context);\n      this._renderId = 0;\n      this._id = _glSurfaceId++;\n    }\n\n    componentWillMount() {\n      Shaders._onSurfaceWillMount(this._id);\n      this._build(this.props);\n      this._attach();\n    }\n\n    componentWillUnmount() {\n      this._renderId = 0;\n      Shaders._onSurfaceWillUnmount(this._id);\n      this._dataAnimated && this._dataAnimated.__detach();\n    }\n\n    componentWillReceiveProps(nextProps) {\n      this._build(nextProps);\n      this._attach();\n    }\n\n    _build(props) {\n      const id = this._id;\n      const renderId = ++this._renderId;\n      const {\n        width,\n        height,\n        pixelRatio: pixelRatioProps,\n        children,\n        debug,\n        preload\n      } = props;\n\n      invariant(\n        children,\n        \"GL.Surface must have in children a GL.Node or a GL Component\"\n      );\n\n      const decorateOnShaderCompile = onShaderCompile =>\n        onShaderCompile && // only decorated if onShaderCompile is defined\n        ((error, result) =>\n          renderId === this._renderId && onShaderCompile(error, result)); // it's outdated. skip the callback call // it's current. propagate the call\n\n      const pixelRatio = pixelRatioProps || getPixelRatio(props);\n\n      invariantStrictPositive(pixelRatio, \"GL.Surface: pixelRatio prop\");\n\n      const surfaceContext = {\n        width,\n        height,\n        pixelRatio\n      };\n\n      const glNode = findGLNodeInGLComponentChildren(\n        <Node\n          shader={postShader}\n          {...surfaceContext}\n          uniforms={{ t: children }}\n        />,\n        surfaceContext\n      );\n\n      invariant(\n        glNode && glNode.childGLNode,\n        \"GL.Surface must have in children a GL.Node or a GL Component\"\n      );\n\n      const { via, childGLNode, context } = glNode;\n\n      let resolved;\n      try {\n        Shaders._beforeSurfaceBuild(id);\n        resolved = resolve(\n          fill(\n            build(\n              childGLNode,\n              context,\n              preload,\n              via,\n              id,\n              decorateOnShaderCompile\n            )\n          )\n        );\n      } catch (e) {\n        throw e;\n      } finally {\n        Shaders._afterSurfaceBuild(id);\n      }\n\n      this._resolved = resolved;\n      this._pixelRatio = pixelRatio;\n\n      if (debug) logResult(resolved.data, resolved.contentsVDOM);\n    }\n\n    _attach() {\n      const oldDataAnimated = this._dataAnimated;\n      const callback = () => {\n        const canvas = this.getGLCanvas();\n        if (!canvas) return;\n        if (canvas.setNativeProps) {\n          const data = this._dataAnimated.__getValue();\n          canvas.setNativeProps({ data });\n        } else {\n          this.forceUpdate();\n        }\n      };\n      this._dataAnimated = new AnimatedData(this._resolved.data, callback);\n\n      oldDataAnimated && oldDataAnimated.__detach();\n    }\n\n    getGLCanvas() {\n      return getGLCanvas(this);\n    }\n\n    captureFrame() {\n      const c = this.getGLCanvas();\n      invariant(c, \"c is '%s'. Is the component unmounted?\", c);\n      invariant(\n        c.captureFrame,\n        \"captureFrame() should be implemented by GLCanvas\"\n      );\n      return c.captureFrame.apply(c, arguments);\n    }\n\n    render() {\n      const renderId = this._renderId;\n      const { contentsVDOM, imagesToPreload } = this._resolved;\n      const data = this._dataAnimated.__getValue();\n      const pixelRatio = this._pixelRatio;\n      const props = this.props;\n      const {\n        children,\n        debug,\n        preload, // eslint-disable-line no-unused-vars\n        style,\n        width,\n        height,\n        backgroundColor,\n        visibleContent,\n        eventsThrough,\n        ...restProps\n      } = props;\n\n      if (process.env.NODE_ENV !== \"production\") {\n        const withoutKeys = contentsVDOM.filter(c => !c.key);\n        if (withoutKeys.length > 0) {\n          console.warn(\n            `gl-react: To avoid potential remounting, please define a \\`key\\` prop on your contents:\n\n${withoutKeys\n              .map(\n                c =>\n                  \"<\" +\n                  ((c &&\n                    c.type &&\n                    (c.type.name || c.type.displayName || \"unknown\")) ||\n                    c) +\n                  \" key=??? ... />\"\n              )\n              .join(\"\\n\")}\n`\n          );\n        }\n      }\n\n      return renderVcontainer(\n        { width, height, style, visibleContent, eventsThrough },\n        contentsVDOM.map((vdom, i) =>\n          renderVcontent(\n            data.width,\n            data.height,\n            vdom.key || i,\n            runtime.decorateVDOMContent(vdom),\n            { visibleContent }\n          )\n        ),\n        renderVGL({\n          ...restProps, // eslint-disable-line no-undef\n          style: { backgroundColor },\n          width,\n          height,\n          pixelRatio,\n          data,\n          nbContentTextures: contentsVDOM.length,\n          imagesToPreload,\n          renderId,\n          visibleContent,\n          eventsThrough\n        })\n      );\n    }\n  }\n\n  GLSurface.displayName = \"GL.Surface\";\n\n  GLSurface.propTypes = {\n    width: PropTypes.any.isRequired,\n    height: PropTypes.any.isRequired,\n    backgroundColor: PropTypes.string,\n    pixelRatio: PropTypes.number,\n    children: PropTypes.element.isRequired,\n    preload: PropTypes.bool,\n    autoRedraw: PropTypes.bool,\n    eventsThrough: PropTypes.bool,\n    visibleContent: PropTypes.bool,\n    onLoad: PropTypes.func,\n    onProgress: PropTypes.func\n  };\n\n  GLSurface.defaultProps = {\n    preload: false,\n    autoRedraw: false,\n    eventsThrough: false,\n    visibleContent: false,\n    backgroundColor: \"#000\"\n  };\n\n  return GLSurface;\n};\n"]}