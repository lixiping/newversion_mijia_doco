{"version":3,"sources":["../../src/data/findChildrenDuplicates.js"],"names":["findChildrenDuplicates","data","toIgnore","descendantsVDOM","descendantsVDOMData","children","map","concat","child","vdom","allIndex","indexOf","occ","i","length","filter","obj","module","exports"],"mappings":";;AAAA;AACA;AACA,SAASA,sBAAT,CAAgCC,IAAhC,EAAsCC,QAAtC,EAAgD;AAC9C,MAAIC,kBAAkB,EAAtB;AACA,MAAIC,sBAAsB,EAA1B;AACAH,OAAKI,QAAL,CAAcC,GAAd,CAAkB,iBAAS;AACzBH,sBAAkBA,gBAAgBI,MAAhB,CAAuBC,MAAML,eAA7B,CAAlB;AACAC,0BAAsBA,oBAAoBG,MAApB,CAA2BC,MAAMJ,mBAAjC,CAAtB;AACD,GAHD;AAIA,SAAOD,gBACJG,GADI,CACA,UAACG,IAAD,EAAOC,QAAP,EAAoB;AACvB,QAAIR,SAASS,OAAT,CAAiBF,IAAjB,MAA2B,CAAC,CAAhC,EAAmC;AACnC,QAAIG,MAAM,CAAV;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIZ,KAAKI,QAAL,CAAcS,MAAlC,EAA0CD,GAA1C,EAA+C;AAC7C,UAAIZ,KAAKI,QAAL,CAAcQ,CAAd,EAAiBV,eAAjB,CAAiCQ,OAAjC,CAAyCF,IAAzC,MAAmD,CAAC,CAAxD,EAA2D;AACzDG;AACA,YAAIA,MAAM,CAAV,EACE,OAAO;AACLX,gBAAMG,oBAAoBM,QAApB,CADD;AAELD;AAFK,SAAP;AAIH;AACF;AACF,GAdI,EAeJM,MAfI,CAeG;AAAA,WAAOC,GAAP;AAAA,GAfH,CAAP;AAgBD;;AAEDC,OAAOC,OAAP,GAAiBlB,sBAAjB","file":"findChildrenDuplicates.js","sourcesContent":["// recursively find shared VDOM across direct children.\n// if a VDOM is used in 2 different children, it means we can share its computation in contextChildren\nfunction findChildrenDuplicates(data, toIgnore) {\n  let descendantsVDOM = [];\n  let descendantsVDOMData = [];\n  data.children.map(child => {\n    descendantsVDOM = descendantsVDOM.concat(child.descendantsVDOM);\n    descendantsVDOMData = descendantsVDOMData.concat(child.descendantsVDOMData);\n  });\n  return descendantsVDOM\n    .map((vdom, allIndex) => {\n      if (toIgnore.indexOf(vdom) !== -1) return;\n      let occ = 0;\n      for (let i = 0; i < data.children.length; i++) {\n        if (data.children[i].descendantsVDOM.indexOf(vdom) !== -1) {\n          occ++;\n          if (occ > 1)\n            return {\n              data: descendantsVDOMData[allIndex],\n              vdom\n            };\n        }\n      }\n    })\n    .filter(obj => obj);\n}\n\nmodule.exports = findChildrenDuplicates;\n"]}