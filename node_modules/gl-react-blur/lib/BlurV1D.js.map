{"version":3,"sources":["../src/BlurV1D.js"],"names":["shaders","Shaders","create","blur1D","frag","BlurV1D","width","height","map","pixelRatio","direction","t","children","resolution","Uniform","Resolution","propTypes","PropTypes","array","isRequired","any"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,UAAUC,iBAAQC,MAAR,CAAe;AAC7BC,UAAQ;AACN;AACAC;AAFM;AADqB,CAAf,CAAhB;;AA0BA,IAAMC,UAAU,SAAVA,OAAU;AAAA,MACdC,KADc,QACdA,KADc;AAAA,MAEdC,MAFc,QAEdA,MAFc;AAAA,MAGdC,GAHc,QAGdA,GAHc;AAAA,MAIdC,UAJc,QAIdA,UAJc;AAAA,MAKdC,SALc,QAKdA,SALc;AAAA,MAMJC,CANI,QAMdC,QANc;AAAA,SAQd,8BAAC,aAAD;AACE,YAAQZ,QAAQG,MADlB;AAEE,WAAOG,KAFT;AAGE,YAAQC,MAHV;AAIE,gBAAYE,UAJd;AAKE,cAAU;AACRC,0BADQ;AAERG,kBAAYC,iBAAQC,UAFZ;AAGRJ,UAHQ;AAIRH;AAJQ;AALZ,IARc;AAAA,CAAhB;;AAsBAH,QAAQW,SAAR,GAAoB;AAClBN,aAAWO,oBAAUC,KAAV,CAAgBC,UADT;AAElBP,YAAUK,oBAAUG,GAAV,CAAcD,UAFN;AAGlBX,OAAKS,oBAAUG,GAAV,CAAcD;AAHD,CAApB;;kBAMed,O","file":"BlurV1D.js","sourcesContent":["import { Shaders, Uniform, Node } from \"gl-react\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst shaders = Shaders.create({\n  blur1D: {\n    // blur9: from https://github.com/Jam3/glsl-fast-gaussian-blur\n    frag: `precision highp float;\nvarying vec2 uv;\nuniform sampler2D t, map;\nuniform vec2 direction, resolution;\n\nvec4 blur9(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n  vec4 color = vec4(0.0);\n  vec2 off1 = vec2(1.3846153846) * direction;\n  vec2 off2 = vec2(3.2307692308) * direction;\n  color += texture2D(image, uv) * 0.2270270270;\n  color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n  color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n  color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n  color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n  return color;\n}\n\nvoid main () {\n  gl_FragColor = blur9(t, uv, resolution, direction * texture2D(map, uv).rg);\n}`\n  }\n});\n\nconst BlurV1D = ({\n  width,\n  height,\n  map,\n  pixelRatio,\n  direction,\n  children: t\n}) => (\n  <Node\n    shader={shaders.blur1D}\n    width={width}\n    height={height}\n    pixelRatio={pixelRatio}\n    uniforms={{\n      direction,\n      resolution: Uniform.Resolution,\n      t,\n      map\n    }}\n  />\n);\n\nBlurV1D.propTypes = {\n  direction: PropTypes.array.isRequired,\n  children: PropTypes.any.isRequired,\n  map: PropTypes.any.isRequired\n};\n\nexport default BlurV1D;\n"]}