{"version":3,"sources":["../src/directionForPassDefault.js"],"names":["NORM","Math","sqrt","p","factor","total","f","ceil"],"mappings":";;;;;AAAA,IAAMA,OAAOC,KAAKC,IAAL,CAAU,CAAV,IAAe,CAA5B;;kBAEe,UAACC,CAAD,EAAIC,MAAJ,EAAYC,KAAZ,EAAsB;AACnC,MAAMC,IAAIF,SAAS,CAAT,GAAaH,KAAKM,IAAL,CAAUJ,IAAI,CAAd,CAAb,GAAgCE,KAA1C;AACA,UAAQ,CAACF,IAAI,CAAL,IAAU,CAAlB,GAAuB;AACrB,SAAK,CAAL;AACE,aAAO,CAACG,CAAD,EAAI,CAAJ,CAAP;AACF,SAAK,CAAL;AACE,aAAO,CAAC,CAAD,EAAIA,CAAJ,CAAP;AACF,SAAK,CAAL;AACE,aAAO,CAACA,IAAIN,IAAL,EAAWM,IAAIN,IAAf,CAAP;AACF,SAAK,CAAL;AACE,aAAO,CAACM,IAAIN,IAAL,EAAW,CAACM,CAAD,GAAKN,IAAhB,CAAP;AARJ;AAUD,C","file":"directionForPassDefault.js","sourcesContent":["const NORM = Math.sqrt(2) / 2;\n\nexport default (p, factor, total) => {\n  const f = factor * 2 * Math.ceil(p / 2) / total;\n  switch ((p - 1) % 4) { // alternate horizontal, vertical and 2 diagonals\n    case 0:\n      return [f, 0];\n    case 1:\n      return [0, f];\n    case 2:\n      return [f * NORM, f * NORM];\n    case 3:\n      return [f * NORM, -f * NORM];\n  }\n};\n"]}